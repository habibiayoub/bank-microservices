server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  #datasource:
  #  url: jdbc:mysql://localhost:3306/accountsdb
  #  username: root
  #  password: root
  #jpa:
  #  show-sql: true
  #sql:
  #  init:
  #    mode: always
  config:
    import: "optional:configserver:http://localhost:8071/"
  #rabbitmq:
  #  host: "localhost"
  #  port: 5672
  #  stream:
  #    username: "guest"
  #    password: "guest"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
      kafka:
        binder:
          brokers:
            - localhost:9092
      default-binder: kafka

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Easy Bank Accounts Application"
    version: 1.0.0

build:
  version: "1.0"

resilience4j.circuitbreaker:
  configs:
    default:
      sliding-window-size: 10
      permitted-number-of-calls-in-half-open-state: 2
      failure-rate-threshold: 50
      wait-duration-in-open-state: 10000

